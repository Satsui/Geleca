package simbionte.component.form.combobox
{
	import fl.data.DataProvider;
	import flash.display.Sprite;
	import flash.display.Stage;
	import flash.events.Event;
	import flash.events.KeyboardEvent;
	import flash.events.MouseEvent;
	import flash.text.TextField;
	import flash.ui.Keyboard;
	import simbionte.component.data.DataList;
	import simbionte.component.data.IBindable;
	import simbionte.component.data.ItemTemplate;
	import simbionte.component.form.Input;
	import simbionte.events.DataListEvent;
	
	public class ComboBox extends Input implements IBindable
	{
		private var _itemSelected						:ItemTemplate;
		
		private var _dataList							:DataList;
		private var _opened								:Boolean = false;
		
		public function ComboBox(dataList:DataList) 
		{
			_dataList 	= dataList;
		}
		
		override protected function setVariables():void 
		{
			_dataList.columns = 1;
			
			super.setVariables();
		}
		
		override protected function setListeners():void 
		{
			dataList.addEventListener(DataListEvent.ITEM_CREATED, dataList_itemCreated);
		}
		
		override protected function initialize():void 
		{
			dataList.initializeComponent();
			
			close();
		}
		
		protected function get dataList()		:DataList 	{ return _dataList; }
		
		/**Atualiza o label do comboBox*/
		protected function updateLabel(label:String):void 
		{
			
		}
		
		private function dataList_itemCreated(e:DataListEvent):void 
		{
			e.item.addEventListener(DataListEvent.ITEM_CLICK, dataList_itemTemplate_itemClick);
		}
		
		private function dataList_itemTemplate_itemClick(e:DataListEvent):void 
		{
			selectItem(e.item.itemIndex);
		}
		
		public function get dataSource():Object { return dataList.dataSource; }
		public function set dataSource(value:Object):void
		{
			dataList.dataSource = value;
		}
		
		public function dataBind():void
		{
			dataList.dataBind();
		}
		
		public function get selectedData()		:String 	{ return String(_itemSelected.dataSource.data); }
		public function get selectedLabel()		:String 	{ return String(_itemSelected.dataSource.label); }
		public function get selectedIndex()		:int 		{ return _itemSelected.itemIndex; }
		public function get length()			:uint 		{ return dataList.length; }
		public function get opened()			:Boolean 	{ return _opened; }
		
		public function set selectedIndex(value:int):void
		{
			selectItem(value);
		}
		
		/*protected function get display():Sprite
		{
			return Sprite(getChildByName("ctr_display"));
		}*/
		
		/*protected function get textDisplay():TextField
		{
			return TextField(display.getChildByName("txt_textField"));
		}*/
		
		/*public function get itemSpacing():Number { return dataList.itemSpacingY; }*/
		
		/*private function comboBox_keyDown(e:KeyboardEvent):void 
		{
			if (e.keyCode == Keyboard.DOWN) selectedIndex ++;
			if (e.keyCode == Keyboard.UP) selectedIndex --;
		}*/
				
		/*private function display_click(e:MouseEvent):void 
		{
			if (length > 0) 
			{
				if (currentFrame == 2) 
				{
					show();
					stage.addEventListener(KeyboardEvent.KEY_DOWN, comboBox_keyDown);
					e.stopImmediatePropagation();
					stage.addEventListener(MouseEvent.CLICK, stage_click, false, 0, true);
				}
				else 
				{
					hide();
					stage.removeEventListener(KeyboardEvent.KEY_DOWN, comboBox_keyDown);
				}
			}
		}*/
		
		/*private function dataList_itemClick(e:DataListEvent):void 
		{
			selectedIndex = e.item.itemIndex;
			
			hide();
		}*/
			
		/*private function dataList_binded(e:DataListEvent):void 
		{
			selectedIndex = 0;
		}*/
		
		/*private function stage_click(e:MouseEvent):void 
		{			
			if (e.currentTarget is Stage) 
			{
				hide();
				stage.removeEventListener(MouseEvent.CLICK, stage_click);
				stage.removeEventListener(KeyboardEvent.KEY_DOWN, comboBox_keyDown);
			}
		}*/
		
		private function selectItem(index:uint):void 
		{
			if (_itemSelected) _itemSelected.enabled = true;
			_itemSelected = dataList.getItemAt(index);
			_itemSelected.enabled = false;
			
			updateLabel(selectedLabel);
		}
		
		public final function open():void 
		{
			_opened = true;
			
			comboBox_open();
		}
		
		protected function comboBox_open():void 
		{
			
		}
		
		public final function close():void 
		{			
			_opened = false;
			
			comboBox_close();
		}		
		
		protected function comboBox_close():void 
		{
			
		}
		
	}

}